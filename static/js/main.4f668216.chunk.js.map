{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","newMovie","setNewMovie","query","setQuery","isLoading","setIsLoading","hasError","setHasError","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","trimEnd","response","Plot","Poster","Title","imdbID","finally","htmlFor","value","onChange","target","handleQueryChange","type","id","placeholder","cn","disabled","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f668216.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nconst DEFAULT_IMG = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A' ? movie.imgUrl : DEFAULT_IMG}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  addMovie,\n}) => {\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleAddMovie = () => {\n    setQuery('');\n    addMovie(newMovie as Movie);\n    setNewMovie(null);\n  };\n\n  const handleDownloadMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(query.trimEnd()).then((response) => {\n      const {\n        Plot, Poster, Title, imdbID,\n      } = response as MovieData;\n\n      if ('Error' in response) {\n        setHasError(true);\n      } else {\n        setNewMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n      }\n    })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleDownloadMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={(event) => handleQueryChange(event)}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': hasError })}\n            />\n          </div>\n\n          {hasError\n          && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie !== null && <MovieCard movie={newMovie} />}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4a51fd8f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const AddMovie = (newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={AddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}